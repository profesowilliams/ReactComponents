@use 'sass:map';
@use '../../styles/abstracts/' as *;

.btn-loading-container {
  display: flex;
  align-items: center;
  justify-content: center;
}
.btn {
  @include set-opacity('background', map.get($color-palette, 'legacy-ocean'), 1);
  border: none;
  border-radius: none;
  box-sizing: border-box;
  color: #ffffff;
  cursor: pointer;
  display: inline-block;
  font-weight: 400;
  font-size: 1rem;
  height: 3rem;
  line-height: unset;
  min-width: 8.8125rem;
  outline-color: transparent;
  outline-style: solid;
  outline-width: 1px;
  outline-offset: 0;
  padding: 12px 20px;
  -webkit-appearance: button;
  position: relative;
  text-align: center;
  text-decoration: none;
  text-decoration-thickness: inherit;
  text-underline-offset: inherit;
  text-transform: none;
  vertical-align: middle;
  width: auto;
}

.btn-loading-container .btn-loading-text {
  margin-left: 5px;
}

element.style {
}
.bd-example > .btn,
.bd-example > .btn-group {
  margin: 0.25rem 0.125rem;
}
.btn:hover {
  color: var(--bs-btn-hover-color);
  background-color: var(--bs-btn-hover-bg);
  border-color: var(--bs-btn-hover-border-color);
}
[type='button']:not(:disabled),
[type='reset']:not(:disabled),
[type='submit']:not(:disabled),
button:not(:disabled) {
  cursor: pointer;
}

[data-bs-theme='light'] {
  &[data-bs-color='dark-blue'] {
    &.btn {
      &.btn-primary {
        @include set-opacity('color', map.get($color-palette, 'white'), 1);
        @include set-opacity('background', map.get($color-palette, 'dark-blue'), 1);

        &:hover {
          @include set-opacity('color', map.get($color-palette, 'white'), 1);
          background: #{$gradient-primary-hover}, #{map.get($color-palette, 'dark-blue')};
        }

        &:active {
          @include set-opacity('color', map.get($color-palette, 'white'), 1);
          background: #{$gradient-primary-active}, #{map.get($color-palette, 'dark-blue')};
        }

        &:disabled {
          @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
          @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
        }
      }
      &.btn-secondary {
        color: #{map.get($color-palette, 'dark-blue')};
        background: transparent;
        border: 1px solid #{map.get($color-palette, 'dark-blue')};

        &:hover {
          @include set-opacity('background', map.get($color-palette, 'dark-blue'), 0.1);
          @include set-opacity('border-color', map.get($color-palette, 'dark-blue'), 0.1);
          border: 1px solid;
        }

        &:active {
          color: #{map.get($color-palette, 'dark-blue')};
          @include set-opacity('background', map.get($color-palette, 'dark-blue'), 0.2);
          @include set-opacity('border-color', map.get($color-palette, 'dark-blue'), 0.2);
          border: 1px solid;
        }

        &:disabled {
          @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
          background: transparent;
          border: 1px solid #{map.get($color-palette, 'cool-gray-8')};
        }
      }
      &.btn-tertiary {
        color: #{map.get($color-palette, 'dark-blue')};
        background: transparent;

        &:hover {
          @include set-opacity('background', map.get($color-palette, 'dark-blue'), 0.1);
          color: #{map.get($color-palette, 'dark-blue')};
          border: none;
        }

        &:active {
          @include set-opacity('background', map.get($color-palette, 'dark-blue'), 0.2);
        }

        &:disabled {
          @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
          background: transparent;
        }
      }
      &.btn-filled {
        color: #{map.get($color-palette, 'dark-blue')};
        background: #{$gradient-filled-bg}, #{map.get($color-palette, 'dark-blue')};

        &:hover {
          color: #{map.get($color-palette, 'dark-blue')};
          background: #{$gradient-filled-hover}, #{map.get($color-palette, 'dark-blue')};
          border: none;
        }

        &:active {
          color: #{map.get($color-palette, 'dark-blue')};
          background: #{$gradient-filled-active}, #{map.get($color-palette, 'dark-blue')};
        }

        &:disabled {
          @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
          @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
        }
      }

      &.btn-link {
        color: #{map.get($color-palette, 'dark-blue')};
        background: transparent;
        text-decoration: none;
        padding-left: 0;
        padding-right: 0;
        min-width: unset;

        &:hover {
          color: #{tint(map.get($color-palette, 'dark-blue'), 20%)};
          background: transparent;
          border: none;
          text-decoration: underline;
          text-underline-position: under;
        }

        &:active {
          color: #{shade(map.get($color-palette, 'dark-blue'), 20%)};
          background: transparent;
          text-decoration: underline;
          text-underline-position: under;
        }

        &:disabled {
          @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
          background: transparent;
        }
      }
    }
  }

  &[data-bs-color='ocean-blue'] {
    &.btn {
      &.btn-primary {
        @include set-opacity('color', map.get($color-palette, 'white'), 1);
        @include set-opacity('background', map.get($color-palette, 'legacy-ocean'), 1);

        &:hover {
          @include set-opacity('color', map.get($color-palette, 'white'), 1);
          background: #{$gradient-primary-hover}, #{map.get($color-palette, 'legacy-ocean')};
        }

        &:active {
          @include set-opacity('color', map.get($color-palette, 'white'), 1);
          background: #{$gradient-primary-active}, #{map.get($color-palette, 'legacy-ocean')};
        }

        &:disabled {
          @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
          @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
        }
      }
      &.btn-secondary {
        color: #{map.get($color-palette, 'legacy-ocean')};
        background: transparent;
        border: 1px solid #{map.get($color-palette, 'legacy-ocean')};

        &:hover {
          @include set-opacity('background', map.get($color-palette, 'legacy-ocean'), 0.1);
          @include set-opacity('border-color', map.get($color-palette, 'legacy-ocean'), 0.1);
          border: 1px solid;
        }

        &:active {
          color: #{map.get($color-palette, 'legacy-ocean')};
          border-color: rgb(0 177 226 / 10%);
          background: rgb(0 177 226 / 10%);
          border: 1px solid;
        }

        &:disabled {
          @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
          background: transparent;
          border: transparent;
        }
      }
      &.btn-tertiary {
        color: #{map.get($color-palette, 'legacy-ocean')};
        background: transparent;

        &:hover {
          @include set-opacity('background', map.get($color-palette, 'legacy-ocean'), 0.1);
          color: #{map.get($color-palette, 'legacy-ocean')};
          border: none;
        }

        &:active {
          @include set-opacity('background', map.get($color-palette, 'legacy-ocean'), 0.2);
        }

        &:disabled {
          @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
          background: transparent;
        }
      }
      &.btn-filled {
        color: #{map.get($color-palette, 'legacy-ocean')};
        background: #{$gradient-filled-bg}, #{map.get($color-palette, 'legacy-ocean')};

        &:hover {
          color: #{map.get($color-palette, 'legacy-ocean')};
          background: #{$gradient-filled-hover}, #{map.get($color-palette, 'legacy-ocean')};
          border: none;
        }

        &:active {
          color: #{map.get($color-palette, 'legacy-ocean')};
          background: #{$gradient-filled-active}, #{map.get($color-palette, 'legacy-ocean')};
        }

        &:disabled {
          @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
          @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
        }
      }

      &.btn-link {
        color: #{map.get($color-palette, 'legacy-ocean')};
        background: transparent;
        text-decoration: none;
        padding-left: 0;
        padding-right: 0;
        min-width: unset;

        &:hover {
          color: #{tint(map.get($color-palette, 'legacy-ocean'), 20%)};
          background: transparent;
          border: none;
          text-decoration: underline;
          text-underline-position: under;
        }

        &:active {
          color: #{shade(map.get($color-palette, 'legacy-ocean'), 20%)};
          background: transparent;
          text-decoration: underline;
          text-underline-position: under;
        }

        &:disabled {
          @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
          background: transparent;
        }
      }
    }
  }

  &.btn-affirmative {
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    background: #{map.get($color-palette, 'forest')};

    &:hover {
      @include set-opacity('color', map.get($color-palette, 'white'), 1);
      background: #{$gradient-affirmative-destructive-hover}, #{map.get($color-palette, 'forest')};
      border: none;
    }

    &:active {
      @include set-opacity('color', map.get($color-palette, 'white'), 1);
      background: #{$gradient-affirmative-destructive-active}, #{map.get($color-palette, 'forest')};
    }

    &:disabled {
      @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
      @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
    }
  }

  &.btn-destructive {
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    background: #{map.get($color-palette, 'cherry')};

    &:hover {
      @include set-opacity('color', map.get($color-palette, 'white'), 1);
      background: #{$gradient-affirmative-destructive-hover}, #{map.get($color-palette, 'cherry')};
      border: none;
    }

    &:active {
      @include set-opacity('color', map.get($color-palette, 'white'), 1);
      background: #{$gradient-affirmative-destructive-active}, #{map.get($color-palette, 'cherry')};
    }

    &:disabled {
      @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
      @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
    }
  }
}

[data-bs-theme='dark'] {
  &[data-bs-color='dark-blue'] {
    &.btn {
      &.btn-primary {
        /* Values from the 'dark' theme primary default */
        color: #{map.get($color-palette, 'dark-blue')};
        @include set-opacity('background', map.get($color-palette, 'white'), 1);

        &:hover {
          @include set-opacity('color', map.get($color-palette, 'dark-blue'), 1);
          @include set-opacity('background', map.get($color-palette, 'white'), 0.85);
        }

        &:active {
          @include set-opacity('color', map.get($color-palette, 'dark-blue'), 1);
          @include set-opacity('background', map.get($color-palette, 'white'), 0.7);
        }

        &:disabled {
          @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
          background: #{rgb(228 229 230 / 80%)};
        }
      }
    }
  }

  &[data-bs-color='ocean-blue'] {
    &.btn {
      &.btn-primary {
        /* Values from the 'dark' theme primary default */
        color: #{map.get($color-palette, 'legacy-ocean')};
        @include set-opacity('background', map.get($color-palette, 'white'), 1);

        &:hover {
          @include set-opacity('color', map.get($color-palette, 'legacy-ocean'), 1);
          @include set-opacity('background', map.get($color-palette, 'white'), 0.85);
        }

        &:active {
          @include set-opacity('color', map.get($color-palette, 'legacy-ocean'), 1);
          @include set-opacity('background', map.get($color-palette, 'white'), 0.7);
        }

        &:disabled {
          @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
          background: #{rgb(228 229 230 / 80%)};
        }
      }
    }
  }

  &.btn-secondary {
    /* Values from the 'dark' theme secondary default */
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    background: transparent;
    border: 1px solid #{map.get($color-palette, 'white')};

    &:hover {
      @include set-opacity('color', map.get($color-palette, 'white'), 1);
      @include set-opacity('background', map.get($color-palette, 'white'), 0.1);
      border: 1px solid #{rgba(map.get($color-palette, 'white'), 1)};
    }

    &:active {
      @include set-opacity('color', map.get($color-palette, 'white'), 1);
      @include set-opacity('background', map.get($color-palette, 'white'), 0.2);
      @include set-opacity('border-color', map.get($color-palette, 'white'), 1);
      border: 1px solid;
    }

    &:disabled {
      @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
      background: transparent;
      border: transparent;
    }
  }
  &.btn-tertiary {
    /* Values from the 'dark' theme tertiary default */
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    background: transparent;

    &:hover {
      @include set-opacity('color', map.get($color-palette, 'white'), 1);
      @include set-opacity('background', map.get($color-palette, 'white'), 0.1);
    }

    &:active {
      @include set-opacity('color', map.get($color-palette, 'white'), 1);
      @include set-opacity('background', map.get($color-palette, 'white'), 0.2);
    }

    &:disabled {
      @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
      background: transparent;
    }
  }
  &.btn-filled {
    /* Values from the 'dark' theme filled default */
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    @include set-opacity('background', map.get($color-palette, 'white'), 0.2);

    &:hover {
      @include set-opacity('color', map.get($color-palette, 'white'), 1);
      @include set-opacity('background', map.get($color-palette, 'white'), 0.1);
      border: transparent;
    }

    &:active {
      @include set-opacity('color', map.get($color-palette, 'white'), 1);
      @include set-opacity('background', map.get($color-palette, 'white'), 0.3);
    }

    &:disabled {
      @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
      @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
    }
  }
  &.btn-link {
    /* Values from the 'dark' theme link default */
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    background: transparent;
    text-decoration: none;
    padding-left: 0;
    padding-right: 0;
    min-width: unset;

    &:hover {
      @include set-opacity('color', map.get($color-palette, 'white'), 0.85);
      background: transparent;
      border: none;
      text-decoration: underline;
      text-underline-position: under;
    }

    &:active {
      @include set-opacity('color', map.get($color-palette, 'white'), 0.7);
      background: transparent;
      text-decoration: underline;
      text-underline-position: under;
    }

    &:disabled {
      @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
      background: transparent;
    }
  }

  &.btn-affirmative {
    /* Values from the 'dark' theme affirmative default */
    color: #{map.get($color-palette, 'forest')};
    background: #{map.get($color-palette, 'white')};

    &:hover {
      color: #{map.get($color-palette, 'forest')};
      @include set-opacity('background', map.get($color-palette, 'white'), 0.85);
      border: none;
    }

    &:active {
      color: #{map.get($color-palette, 'forest')};
      @include set-opacity('background', map.get($color-palette, 'white'), 0.7);
    }

    &:disabled {
      @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
      @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
    }
  }
  &.btn-destructive {
    /* Values from the 'dark' theme destructive default */
    color: #{map.get($color-palette, 'cherry')};
    background: #{map.get($color-palette, 'white')};

    &:hover {
      @include set-opacity('color', map.get($color-palette, 'cherry'), 1);
      @include set-opacity('background', map.get($color-palette, 'white'), 0.85);
      border: none;
    }

    &:active {
      @include set-opacity('color', map.get($color-palette, 'cherry'), 1);
      @include set-opacity('background', map.get($color-palette, 'white'), 0.7);
    }

    &:disabled {
      @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
      @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
    }
  }
}

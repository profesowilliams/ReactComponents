@use 'sass:map';
@use '../../../scss/abstracts/' as *;
@import 'bootstrap/scss/buttons';

.btn {
  --bs-btn-padding-x: 0.75rem;
  --bs-btn-padding-y: 0.375rem;
  --bs-btn-font-family: Arial;
  --bs-btn-font-size: 1rem;
  --bs-btn-font-weight: 400;
  --bs-btn-line-height: 1.5;
  --bs-btn-color: var(--bs-body-color);
  --bs-btn-bg: transparent;
  --bs-btn-border-width: var(--bs-border-width);
  --bs-btn-border-color: transparent;
  --bs-btn-border-radius: 0.125rem;
  --bs-btn-hover-border-color: transparent;
  --bs-btn-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);
  --bs-btn-disabled-opacity: 0.65;
  --bs-btn-focus-box-shadow: 0 0 0 0.25rem rgba(var(--bs-btn-focus-shadow-rgb), 0.5);
  display: inline-block;
  padding: var(--bs-btn-padding-y) var(--bs-btn-padding-x);
  font-family: var(--bs-btn-font-family);
  font-size: var(--bs-btn-font-size);
  font-weight: var(--bs-btn-font-weight);
  line-height: var(--bs-btn-line-height);
  color: var(--bs-btn-color);
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  border: var(--bs-btn-border-width) solid var(--bs-btn-border-color);
  border-radius: var(--bs-btn-border-radius);
  background-color: var(--bs-btn-bg);
  transition:
    color 0.15s ease-in-out,
    background-color 0.15s ease-in-out,
    border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;

  @include set-opacity('background', map.get($color-palette, 'legacy-ocean'), 1);
  border: none;
  border-radius: none;
  box-sizing: border-box;
  color: #ffffff;
  cursor: pointer;
  display: inline-block;
  font-weight: 400;
  font-size: 1rem;
  height: 3rem;
  line-height: unset;
  min-width: 8.8125rem;
  outline-color: transparent;
  outline-style: solid;
  outline-width: 1px;
  outline-offset: 0;
  padding: 12px 20px;
  -webkit-appearance: button;
  position: relative;
  text-align: center;
  text-decoration: none;
  text-decoration-thickness: inherit;
  text-underline-offset: inherit;
  text-transform: none;
  vertical-align: middle;
  width: auto;
}

.btn-loading-container .btn-loading-text {
  margin-left: 5px;
}

.bd-example > .btn,
.bd-example > .btn-group {
  margin: 0.25rem 0.125rem;
}

.btn:hover {
  color: var(--bs-btn-hover-color);
  background-color: var(--bs-btn-hover-bg);
  border-color: var(--bs-btn-hover-border-color);
}

[type='button']:not(:disabled),
[type='reset']:not(:disabled),
[type='submit']:not(:disabled),
button:not(:disabled) {
  cursor: pointer;
}

[data-bs-compact='true'] {
  display: inline-flex;
  height: 2rem;
  padding: 0.5rem;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 0.625rem;
  flex-shrink: 0;
}

@mixin button-styles($color, $bg, $gradient-hover, $gradient-active) {
  @include set-opacity('color', map.get($color-palette, 'white'), 1);
  @include set-opacity('background', map.get($color-palette, $bg), 1);

  &:hover {
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    background: #{$gradient-hover}, #{map.get($color-palette, $bg)};
  }

  &:active {
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    background: #{$gradient-active}, #{map.get($color-palette, $bg)};
  }

  &:disabled {
    @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
    @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
  }
}

@mixin secondary-button-styles($color) {
  color: #{map.get($color-palette, $color)};
  background: transparent;
  border: 1px solid #{map.get($color-palette, $color)};

  &:hover {
    @include set-opacity('background', map.get($color-palette, $color), 0.1);
    @include set-opacity('border-color', map.get($color-palette, $color), 0.1);
    border: 1px solid;
  }

  &:active {
    color: #{map.get($color-palette, $color)};
    @include set-opacity('background', map.get($color-palette, $color), 0.2);
    @include set-opacity('border-color', map.get($color-palette, $color), 0.2);
    border: 1px solid;
  }

  &:disabled {
    @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
    background: transparent;
    border: 1px solid #{map.get($color-palette, 'cool-gray-8')};
  }
}

@mixin tertiary-button-styles($color) {
  color: #{map.get($color-palette, $color)};
  background: transparent;

  &:hover {
    @include set-opacity('background', map.get($color-palette, $color), 0.1);
    color: #{map.get($color-palette, $color)};
    border: none;
  }

  &:active {
    @include set-opacity('background', map.get($color-palette, $color), 0.2);
  }

  &:disabled {
    @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
    background: transparent;
  }
}

@mixin filled-button-styles($color, $gradient-bg, $gradient-hover, $gradient-active) {
  color: #{map.get($color-palette, $color)};
  background: #{$gradient-bg}, #{map.get($color-palette, $color)};

  &:hover {
    color: #{map.get($color-palette, $color)};
    background: #{$gradient-hover}, #{map.get($color-palette, $color)};
    border: none;
  }

  &:active {
    color: #{map.get($color-palette, $color)};
    background: #{$gradient-active}, #{map.get($color-palette, $color)};
  }

  &:disabled {
    @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
    @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
  }
}

@mixin link-button-styles($color) {
  color: #{map.get($color-palette, $color)};
  background: transparent;
  text-decoration: none;
  padding-left: 0;
  padding-right: 0;
  min-width: unset;

  &:hover {
    color: #{tint(map.get($color-palette, $color), 20%)};
    background: transparent;
    border: none;
    text-decoration: underline;
    text-underline-position: under;
  }

  &:active {
    color: #{shade(map.get($color-palette, $color), 20%)};
    background: transparent;
    text-decoration: underline;
    text-underline-position: under;
  }

  &:disabled {
    @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
    background: transparent;
  }
}

[data-bs-theme='light'] {
  &[data-bs-color='dark-blue'] {
    &.btn {
      &.btn-primary {
        @include button-styles('dark-blue', 'dark-blue', $gradient-primary-hover, $gradient-primary-active);
      }
      &.btn-secondary {
        @include secondary-button-styles('dark-blue');
      }
      &.btn-tertiary {
        @include tertiary-button-styles('dark-blue');
      }
      &.btn-filled {
        @include filled-button-styles('dark-blue', $gradient-filled-bg, $gradient-filled-hover, $gradient-filled-active);
      }
      &.btn-link {
        @include link-button-styles('dark-blue');
      }
    }
  }

  &[data-bs-color='ocean-blue'] {
    &.btn {
      &.btn-primary {
        @include button-styles('legacy-ocean', 'legacy-ocean', $gradient-primary-hover, $gradient-primary-active);
      }
      &.btn-secondary {
        @include secondary-button-styles('legacy-ocean');
      }
      &.btn-tertiary {
        @include tertiary-button-styles('legacy-ocean');
      }
      &.btn-filled {
        @include filled-button-styles('legacy-ocean', $gradient-filled-bg, $gradient-filled-hover, $gradient-filled-active);
      }
      &.btn-link {
        @include link-button-styles('legacy-ocean');
      }
    }
  }

  &[data-bs-color='teal'] {
    &.btn {
      &.btn-primary {
        @include button-styles('teal', 'teal', $gradient-primary-hover, $gradient-primary-active);
      }
      &.btn-secondary {
        @include secondary-button-styles('teal');
      }
      &.btn-tertiary {
        @include tertiary-button-styles('teal');
      }
      &.btn-filled {
        @include filled-button-styles('teal', $gradient-filled-bg, $gradient-filled-hover, $gradient-filled-active);
      }
      &.btn-link {
        @include link-button-styles('teal');
      }
    }
  }

  &[data-bs-color='cobalt'] {
    &.btn {
      &.btn-primary {
        @include button-styles('cobalt', 'cobalt', $gradient-primary-hover, $gradient-primary-active);
      }
      &.btn-secondary {
        @include secondary-button-styles('cobalt');
      }
      &.btn-tertiary {
        @include tertiary-button-styles('cobalt');
      }
      &.btn-filled {
        @include filled-button-styles('cobalt', $gradient-filled-bg, $gradient-filled-hover, $gradient-filled-active);
      }
      &.btn-link {
        @include link-button-styles('cobalt');
      }
    }
  }

  &.btn-affirmative {
    @include button-styles('forest', 'forest', $gradient-affirmative-destructive-hover, $gradient-affirmative-destructive-active);
  }

  &.btn-destructive {
    @include button-styles('cherry', 'cherry', $gradient-affirmative-destructive-hover, $gradient-affirmative-destructive-active);
  }
}

@mixin primary-button-styles($color) {
  color: #{map.get($color-palette, $color)};
  @include set-opacity('background', map.get($color-palette, 'white'), 1);

  &:hover {
    @include set-opacity('color', map.get($color-palette, $color), 1);
    @include set-opacity('background', map.get($color-palette, 'white'), 0.85);
  }

  &:active {
    @include set-opacity('color', map.get($color-palette, $color), 1);
    @include set-opacity('background', map.get($color-palette, 'white'), 0.7);
  }

  &:disabled {
    @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
    background: #{rgb(228 229 230 / 80%)};
  }
}

@mixin secondary-button-styles {
  @include set-opacity('color', map.get($color-palette, 'white'), 1);
  background: transparent;
  border: 1px solid #{map.get($color-palette, 'white')};

  &:hover {
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    @include set-opacity('background', map.get($color-palette, 'white'), 0.1);
    border: 1px solid #{rgba(map.get($color-palette, 'white'), 1)};
  }

  &:active {
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    @include set-opacity('background', map.get($color-palette, 'white'), 0.2);
    @include set-opacity('border-color', map.get($color-palette, 'white'), 1);
    border: 1px solid;
  }

  &:disabled {
    @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
    background: transparent;
    border: transparent;
  }
}

@mixin tertiary-button-styles {
  @include set-opacity('color', map.get($color-palette, 'white'), 1);
  background: transparent;

  &:hover {
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    @include set-opacity('background', map.get($color-palette, 'white'), 0.1);
  }

  &:active {
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    @include set-opacity('background', map.get($color-palette, 'white'), 0.2);
  }

  &:disabled {
    @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
    background: transparent;
  }
}

@mixin filled-button-styles {
  @include set-opacity('color', map.get($color-palette, 'white'), 1);
  @include set-opacity('background', map.get($color-palette, 'white'), 0.2);

  &:hover {
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    @include set-opacity('background', map.get($color-palette, 'white'), 0.1);
    border: transparent;
  }

  &:active {
    @include set-opacity('color', map.get($color-palette, 'white'), 1);
    @include set-opacity('background', map.get($color-palette, 'white'), 0.3);
  }

  &:disabled {
    @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
    @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
  }
}

@mixin link-button-styles {
  @include set-opacity('color', map.get($color-palette, 'white'), 1);
  background: transparent;
  text-decoration: none;
  padding-left: 0;
  padding-right: 0;
  min-width: unset;

  &:hover {
    @include set-opacity('color', map.get($color-palette, 'white'), 0.85);
    background: transparent;
    border: none;
    text-decoration: underline;
    text-underline-position: under;
  }

  &:active {
    @include set-opacity('color', map.get($color-palette, 'white'), 0.7);
    background: transparent;
    text-decoration: underline;
    text-underline-position: under;
  }

  &:disabled {
    @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
    background: transparent;
  }
}

@mixin affirmative-button-styles($color) {
  color: #{map.get($color-palette, $color)};
  background: #{map.get($color-palette, 'white')};

  &:hover {
    color: #{map.get($color-palette, $color)};
    @include set-opacity('background', map.get($color-palette, 'white'), 0.85);
    border: none;
  }

  &:active {
    color: #{map.get($color-palette, $color)};
    @include set-opacity('background', map.get($color-palette, 'white'), 0.7);
  }

  &:disabled {
    @include set-opacity('color', map.get($color-palette, 'cool-gray-8'), 1);
    @include set-opacity('background', map.get($color-palette, 'neutral-gray-2'), 1);
  }
}

[data-bs-theme='dark'] {
  &[data-bs-color='dark-blue'] {
    &.btn.btn-primary {
      @include primary-button-styles('dark-blue');
    }
  }

  &[data-bs-color='ocean-blue'] {
    &.btn.btn-primary {
      @include primary-button-styles('legacy-ocean');
    }
  }

  &[data-bs-color='teal'] {
    &.btn.btn-primary {
      @include primary-button-styles('teal');
    }
  }

  &.btn-secondary {
    @include secondary-button-styles;
  }

  &.btn-tertiary {
    @include tertiary-button-styles;
  }

  &.btn-filled {
    @include filled-button-styles;
  }

  &.btn-link {
    @include link-button-styles;
  }

  &.btn-affirmative {
    @include affirmative-button-styles('forest');
  }

  &.btn-destructive {
    @include affirmative-button-styles('cherry');
  }
}
